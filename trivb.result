findtype
makefuncall
makeop
 token 94714152145792  OP            <=  dtype  0  link 0  operands 0
copytok
 token 94714152145856  ID             i  dtype  0  link 94714152145152
copytok
 token 94714152145920  ID             i  dtype  0  link 94714152145152
copytok
 token 94714152145984  ID             i  dtype  0  link 94714152145152
makeop
 token 94714152146048  OP            :=  dtype  0  link 0  operands 0
makeop
 token 94714152146112  OP             +  dtype  0  link 0  operands 0
makefor
 token 94714152144960  OP         progn  dtype  0  link 0  operands 94714152145088
makeprogram
Symbol table level 0
 94714152104544        real  BASIC  basicdt   1          siz     8
 94714152104640     integer  BASIC  basicdt   0          siz     4
 94714152104736        char  BASIC  basicdt   2          siz     1
 94714152104832     boolean  BASIC  basicdt   3          siz     4
 94714152104928         exp  knd 5 0  typ 94714152105024  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 94714152105216       trexp  knd 5 0  typ 94714152105312  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 94714152105504         sin  knd 5 0  typ 94714152105600  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 94714152105792         cos  knd 5 0  typ 94714152105888  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 94714152106080       trsin  knd 5 0  typ 94714152106176  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 94714152106368        sqrt  knd 5 0  typ 94714152106464  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 94714152106656       round  knd 5 0  typ 94714152106752  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 94714152106944      iround  knd 5 0  typ 94714152107040  lvl  0  siz     0  off     0
(FUNCTION integer
          real)
 94714152107232         ord  knd 5 0  typ 94714152107328  lvl  0  siz     0  off     0
(FUNCTION integer
          integer)
 94714152107520         new  knd 5 0  typ 94714152107616  lvl  0  siz     0  off     0
(FUNCTION integer
          integer)
 94714152107808       trnew  knd 5 0  typ 94714152107904  lvl  0  siz     0  off     0
(FUNCTION integer
          integer)
 94714152108096       write  knd 5 0  typ 94714152108192  lvl  0  siz     0  off     0
(FUNCTION NULL
          char)
 94714152108384     writeln  knd 5 0  typ 94714152108480  lvl  0  siz     0  off     0
(FUNCTION NULL
          char)
 94714152108672      writef  knd 5 0  typ 94714152108768  lvl  0  siz     0  off     0
(FUNCTION NULL
          real)
 94714152108960    writelnf  knd 5 0  typ 94714152109056  lvl  0  siz     0  off     0
(FUNCTION NULL
          real)
 94714152109248      writei  knd 5 0  typ 94714152109344  lvl  0  siz     0  off     0
(FUNCTION NULL
          integer)
 94714152109536    writelni  knd 5 0  typ 94714152109632  lvl  0  siz     0  off     0
(FUNCTION NULL
          integer)
 94714152109824        read  knd 5 0  typ 94714152109920  lvl  0  siz     0  off     0
(FUNCTION NULL
          NULL)
 94714152110112      readln  knd 5 0  typ 94714152110208  lvl  0  siz     0  off     0
(FUNCTION NULL
          NULL)
 94714152110400         eof  knd 5 0  typ 94714152110496  lvl  0  siz     0  off     0
(FUNCTION boolean
          NULL)
Symbol table level 1
 94714152144448           i  VAR    0 typ integer  lvl  1  siz     4  off     0
 94714152144544         lim  VAR    0 typ integer  lvl  1  siz     4  off     4
yyparse result =        0
(program graph1 (progn output)
                (progn (:= lim 7)
                       (progn (:= i 0)
                              (label 0)
                              (if (<= i lim)
                                  (progn (funcall writeln '*')
                                         (:= i (+ i 1))
                                         (goto 0))))))
# ---------------- Beginning of Generated Code --------------------
        .file   "foo"
        .text
        .globl graph1
        .type   graph1, @function
graph1:
.LFB0:
	.cfi_startproc
	pushq	%rbp              # save base pointer on stack
	.cfi_def_cfa_offset 16
	movq	%rsp, %rbp        # move stack pointer to base pointer
	.cfi_offset 6, -16
	.cfi_def_cfa_register 6
        subq	$32, %rsp 	  # make space for this stack frame
	movq	%rbx, %r9        # save %rbx (callee-saved) in %r9
# ------------------------- begin Your code -----------------------------
	movl	$7,%eax         	#  7 -> %eax
	movl	%eax,-28(%rbp)     	#  %eax -> lim
	movl	$0,%eax         	#  0 -> %eax
	movl	%eax,-32(%rbp)     	#  %eax -> i
# ----------------------- begin Epilogue code ---------------------------
	movq	%r9, %rbx        # restore %rbx (callee-saved) from %r9
        leave
        ret
        .cfi_endproc
.LFE0:
        .size   graph1, .-graph1
# ----------------- end Epilogue; Literal data follows ------------------
        .section        .rodata

        .ident  "CS 375 Compiler - Summer 2022"
